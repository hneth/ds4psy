% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_fun.R
\name{plot_text_match}
\alias{plot_text_match}
\title{Plot text characters (from file or user input) and match patterns.}
\usage{
plot_text_match(
  file = "",
  lbl_hi = NA,
  lbl_lo = NA,
  bg_hi = NA,
  bg_lo = "[[:space:]]",
  lbl_tiles = TRUE,
  lbl_rotate = FALSE,
  cex = 3,
  fontface = 1,
  family = "sans",
  col_lbl = "black",
  col_lbl_hi = pal_ds4psy[[1]],
  col_lbl_lo = pal_ds4psy[[9]],
  col_bg = pal_ds4psy[[7]],
  col_bg_hi = pal_ds4psy[[4]],
  col_bg_lo = "white",
  borders = FALSE,
  border_col = "white",
  border_size = 0.5
)
}
\arguments{
\item{file}{The text file to read (or its path). 
If \code{file = ""} (the default), \code{scan} is used 
to read user input from the Console. 
If a text file is stored in a sub-directory, 
enter its path and name here (without any leading or 
trailing "." or "/"). 
Default: \code{file = ""}.}

\item{lbl_hi}{Labels to highlight (as regex). 
Default: \code{lbl_hi = NA}.}

\item{lbl_lo}{Labels to de-emphasize (as regex). 
Default: \code{lbl_lo = NA}.}

\item{bg_hi}{Background tiles to highlight (as regex). 
Default: \code{bg_hi = NA}.}

\item{bg_lo}{Background tiles to de-emphasize (as regex). 
Default: \code{bg_lo = "[[:space:]]"}.}

\item{lbl_tiles}{Add character labels to tiles? 
Default: \code{lbl_tiles = TRUE} (i.e., show labels).}

\item{lbl_rotate}{Rotate character labels? 
Default: \code{lbl_rotate = FALSE} (i.e., no rotation).}

\item{cex}{Character size (numeric). 
Default: \code{cex = 3}.}

\item{fontface}{Font face of text labels (numeric). 
Default: \code{fontface = 1}, (from 1 to 4).}

\item{family}{Font family of text labels (name).
Default: \code{family = "sans"}. 
Alternative options: "sans", "serif", or "mono".}

\item{col_lbl}{Default color of text labels.
Default: \code{col_lbl = "black"} (if \code{lbl_tiles = TRUE}).}

\item{col_lbl_hi}{Highlighting color of text labels.
Default: \code{col_lbl_hi = pal_ds4psy[[1]]}.}

\item{col_lbl_lo}{De-emphasizing color of text labels.
Default: \code{col_lbl_lo = pal_ds4psy[[9]]}.}

\item{col_bg}{Default color to fill background tiles.
Default: \code{col_bg = pal_ds4psy[[7]]}.}

\item{col_bg_hi}{Highlighting color to fill background tiles.
Default: \code{col_bg_hi = pal_ds4psy[[4]]}.}

\item{col_bg_lo}{De-emphasizing color to fill background tiles.
Default: \code{col_bg_lo = "white"}.}

\item{borders}{Boolean: Add borders to tiles? 
Default: \code{borders = FALSE} (i.e., no borders).}

\item{border_col}{Color of borders (if \code{borders = TRUE}). 
Default: \code{border_col = "white"}.}

\item{border_size}{Size of borders (if \code{borders = TRUE}). 
Default: \code{border_size = 0.5}.}
}
\description{
\code{plot_text_match} parses text 
(from a file or from user input in Console) 
into a table and then plots its individual characters 
as a tile plot (using \strong{ggplot2}).
}
\details{
\code{plot_text_match} blurs the boundary between a text 
and its graphical representation by adding visual options 
for coloring characters based on matching patterns. 

\code{plot_text_match} is based on \code{\link{plot_text_match}}, 
but provides additional support for coloring characters 
(i.e., the text label and background fill color of each tile) 
based on matching regular expression (regex).  

The output of \code{plot_text_match} is character-based: 
Individual characters are plotted at equidistant x-y-positions 
with color settings for text labels and tile fill colors.

Two regular expressions and corresponding color arguments 
allow highlighting and de-emphasizing individual 
characters (i.e., text labels or fill colors).
that match the provided patterns.

\code{plot_text_match} invisibly returns a 
description of the plot (as a data frame).
}
\examples{
## Create a temporary file "test.txt":
# cat("Hello world!", "This is a test file.", 
#     "Can you see this text?", 
#     "Good! Please carry on...", 
#     file = "test.txt", sep = "\n")

## (a) Plot text from file:
# plot_text_match("test.txt")  # default
# plot_text_match("test.txt", lbl_hi = "[[:upper:]]", lbl_lo = "[[:punct:]]", 
#                 col_lbl_hi = "red", col_lbl_lo = "blue")
 
# plot_text_match("test.txt", lbl_hi = "[aeiou]", col_lbl_hi = "red", 
#                  col_bg = "white", bg_hi = "see")  # mark vowels and "see" (in bg)
# plot_text_match("test.txt", bg_hi = "[aeiou]", col_bg_hi = "gold")  # mark (bg of) vowels

# # Note: plot_text_match() invisibly returns a description of the plot (as df):
# tb <- plot_text_match("test.txt", lbl_hi = "[aeiou]", lbl_rotate = TRUE)
# head(tb)

# unlink("test.txt")  # clean up (by deleting file).

\donttest{
## (b) Plot text (from file in subdir):
# plot_text_match("data-raw/txt/hello.txt")  # requires txt file
# plot_text_match(file = "data-raw/txt/ascii.txt", cex = 5, 
#                 col_bg = "grey", char_bg = "-")
           
## (c) Plot text input (from console):
# plot_text_match()
}

}
\seealso{
\code{\link{plot_text}} for plotting characters and color tiles by frequency; 
\code{\link{read_ascii}} for reading text into a table; 
\code{\link{pal_ds4psy}} for default color palette.

Other plot functions: 
\code{\link{plot_fn}()},
\code{\link{plot_fun}()},
\code{\link{plot_n}()},
\code{\link{plot_text}()},
\code{\link{plot_tiles}()},
\code{\link{theme_clean}()},
\code{\link{theme_ds4psy}()},
\code{\link{theme_empty}()}
}
\concept{plot functions}
